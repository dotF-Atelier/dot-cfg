Practical Multilayered Materials

Michal Drobot Principal Rendering Engineer

Adam Micciulla Senior Rendering Engineer

© 2017 Activision Publishing, Inc.

Motivation

Cotton cloth

Opacity, Absorption, Scattering

Tinted glass

Paper

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Frosted glass

Complex Materials

LLaaccqquueerreedd wWoooodd

Galvanized metal, oil layer Metallic paint

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Hair Shader
Dust Shader

Production Oriented

Flag Shader

Translucency

Sand

Shader

Fuzz

Flake Color

Ice Shader

Subsurface Scattering

Opacity

Clear Coat Shader

Car Paint Shader

Angular Falloff

Scattering

Transparency

Trans color

Unified Shading Model
Unified Material Parametrization
Model

Generalized Material Model

Generalized Material Model

• Surface
• Geometric structure at interface
• Macro
• Geometric structure inside material
• Micro
• Medium lighting model

Surface

Macro Medium

interface

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

• Material with complex macro properties
• Semi-opaque cloth
• View dependent • Specular reflection remains

© 2017 Activision Publishing, Inc.

Macrostructure
interface

• Slice of cloth on macro level = tubes • Density and length of tubes defines perceptual ‘opacity’

Physical Macrostructure
• Opacity is a function of view angle, density and thickness of tubes

Ad-hoc Physically Based Opacity

• Groove shadowing defines angular change in opacity
• Inverse of Smith-Schlick Geometric Shadowing [HEI14]
• Macro groove layout implicitly given by density • Macro groove amplitude given by material thickness

© courtesy of Eric Heiz

Simple opacity alpha

© 2017 Activision Publishing, Inc.

Simple opacity alpha

© 2017 Activision Publishing, Inc.

Geometric opacity: thin surface

© 2017 Activision Publishing, Inc.

Geometric opacity: thick surface

© 2017 Activision Publishing, Inc.

float PhysicallyBased_GeometricOpacity( float NdotV, float alpha, float t ) // t - thickness {
float x = NdotV; float g = 1.0f - ( x / ( x * ( 1.0 - t ) + t ) ); // Smith-Schlick G return lerp( alpha, 1.0f, g ); // base opacity lerp to ‘shadowed’. Counteracts opacity change due to mips }

Generalized Macrostructure

• Material macro physical properties
• Density • Thickness
• Opacity – derived from macro properties
• Probability of ray passing through material on macro level
• Affects whole BRDF (Diffuse & Specular)
• Macro level scattering & absorption
• Assumption - macro level does not influence micro level
• Future research [HEI16]

thickness

interface

medium

Generalized Macrostructure

• PCV
• Density = 1 • Thickness irrelevant

• Salt transition
• Density < 1 • Thickness relevant

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Generalized Macrostructure for Material Blending
• Density used for partial ‘material blend’ or ‘semi-opaque’ materials • Heightfield as ‘thickness’ for height field blending [DRO10]

Mud to metal transition

Wet to dry asphalt transition

Microstructure
• Colored Glass
• Density = 1 • Thickness - relevant • Medium IOR - refraction
© 2017 Activision Publishing, Inc.

Thin Paper

Microstructure
Solid Wood

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Thin Paper
BSDF

Microstructure

Specular

Solid Wood

Diffuse

BRDF

BTDF

Microstructure

• Material micro physical properties (medium)
• Absorption • Scattering • IOR • Transmittance • Other BRDF properties
• Conceptually similar to mix of volume and surface rendering [DUP16]

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Transmittance 0.0 Scattering 0.0
BSDF

Transmittance 0.5 Scattering 0.0
BSDF

Transmittance 1.0 Scattering 0.0
BSDF

BTDF

BTDF

BTDF

• Simple BSDF
• Transmittance defines amount of diffuse energy that will be transmitted past medium interface

Transmittance 1.0 Scattering 1.0
BSDF

Transmittance 0.5 Scattering 0.5
BSDF

Transmittance 0.5 Scattering 0.5 Absorption 0.5
BSDF

BTDF

BTDF

BTDF

• Simple BTDF
• Surface roughness and medium scattering define ray scattering on material exit • Medium absorption and ray length (macro thickness and ray angle) define ray absorption
• Beer-Lambert Law

Material Compiler

Art-Oriented Material Definition [BUR12]

• Surface (structural)
• Normal • Roughness
• Macro (structural)
• Density • Thickness
• Micro (medium)
• Albedo • Sheen • Specular Color ( IOR derived [BUR15] ) • Anisotropy • Transmittance • Absorption color ( at distance [BUR15] ) • Scattering ( at distance ‘roughness’ units )

Surface

Macro Medium

Building Blocks (Shader Code Blocks)

Specular GGX Anisotropic Specular GGX Ambient Specular GGX Smith-Schlick F Smith-Schlick G Beer Absorption

Lambert Diffuse

Disney Diffuse

Others…

Surface Properties Micro Properties Macro Properties

Material Compiler

Optimized Material Shader
Optimized Render Setup (Passes, Blending)

Path-Based Material Evaluation

air

Light Quantities:

Evaluate Surface ( BSDF )

Diffuse & Specular

- accumulatedSpecular - accumulatedDiffuse

interface0 interface1
air

Evaluate Medium ( BTDF )

Volume Scattered Diffuse
Scattering & Absorption

Evaluate Material exit interface

Render Setup

View Ray Data: - rayAccumTransmittance - rayAccumScatter - rayIOR - rayDirection - rayPosition

Blending

View Ray Entering the Medium

Eye air
interface0 interface1 air scene

Light quantities (in eye dir): - accumulatedSpecular - accumulatedDiffuse
View Ray (at medium exit): - rayAccumTransmittance - rayAccumScatter - rayPosition

Light = specular +
diffuse * (1.0f – transmittance)+
Integral(scene(position), scattering)* transmittance

Material Compiler Blend Setup

HW Blend Parameters: - addColorRGB - blendColorRGB - transparencyRGB
Light Quantities: - accumulatedSpecular - accumulatedDiffuse
View Ray: - rayAccumTransmittance - rayAccumScatter - rayPosition

NO

NO

transmittance

YES

!= 0

NO

IsMono(absorption) &&

YES

IsMono(specular)

scatter > 0.0 ||

YES

delta(position)

!= 0.0

Opaque
HW Blend
HW Dual Blend
Manual Blend SSRefraction

Blend Add with colored absorption HW Blend

Blend Add RGB with colored absorption HW Dual Blend

Correct specular Incorrect transmission

© 2017 Activision Publishing, Inc.
Correct specular Correct transmission

// Pre-Multiplied Alpha #if USE_BLENDFUNC_BLEND_ADD_RGB
#define TRANS_TYPE float3 struct PixelOutput{ float3 color :SV_TARGET0;
float3 color1 :SV_TARGET1; }; #elif USE_BLENDFUNC_BLEND_ADD
#define TRANS_TYPE float struct PixelOutput{ float4 color :SV_TARGET0; }; #endif

PixelOutput GetBlendingOutput( float3 blendColor, float3 addColor, TRANS_TYPE trans ) {

PixelOutput fragment = ( PixelOutput) 0;

float3 blend

= blendColor;

float3 add

= addColor;

#if USE_BLENDFUNC_BLEND_ADD_RGB

fragment.color1.rgb = trans;

#elif USE_BLENDFUNC_BLEND_ADD

fragment.color.a

= trans;

#endif

fragment.color.rgb = blend * trans + add;

return fragment; }

rgbOp ADD

HW Dual Blend BLEND_ADD_RGB

rgbSrc

rgbDst

aOp

aSrc

ONE

INV_SRC_ COLOR1

DISABLED

ONE

rgbOp ADD

HW Blend BLEND_ADD

rgbSrc

rgbDst

aOp

aSrc

ONE

INV_SRC_ ALPHA

DISABLED

ONE

aDst ZERO
aDst ZERO

Manual Blend Screen Space Refraction
• rayScattering -> PDF [STA15] • Calculate projected area of PDF
• Re-use IBL filtering math • Re-use Glossy Screen Space Reflection math
• Pick depth pyramid mip
• Projected area at short distance (~1m)
• Importance sample depth (using PDF)
• Jittered/dithered • Averaged depth
• Pre-filter backbuffer into pyramid
• PDF based importance sampling for each mip • Re-use pre-filtered IBL processing [MAN16]

© 2017 Activision Publishing, Inc.

• Project ray in 2D by ray length to average depth hit point
• Pick backbuffer mip level to match projected area of PDF at average depth hit
• Sample backbuffer at 2D hit location at selected mip level
• Blend of light quantities and refracted, scattered background in shader
• Refraction resolves • View model opaque • Scene opaque

Multilayered Materials

Surface Decomposition

Lacquered wood
© 2017 Activision Publishing, Inc.

dielectric dielectric

Surface Decomposition

Metallic paint

dielectric conductor

© 2017 Activision Publishing, Inc.

Surface Decomposition

Glazed carbon fiber

dielectric dielectric

© 2017 Activision Publishing, Inc.

Wood

Metallic paint

Carbon fiber

Lacquered wood

© 2017 Activision Publishing, Inc.

Glazed carbon fiber

Carbon fiber
© 2017 Activision Publishing, Inc.

Glazed carbon fiber

Tinted glazed carbon fiber
© 2017 Activision Publishing, Inc.

Glazed carbon fiber

Multilayered Material Compilation

Path-Based Material Evaluation

air
interface0 Interface 1,2…n last interface air

Evaluate Material 0
Evaluate Material 1,2…n
Evaluate Material n

Evaluate Material Exit If Last Interface

Render Setup

Light Quantities: - accumulatedSpecular - accumulatedDiffuse
View Ray Data: - rayAccumTransmittance - rayAccumScatter - rayIOR - rayDirection - rayPosition

Absorption
• Ray accumulates absorption for ‘view path’ during IBL stage
• Incoming IBL lighting re-uses accumulated ‘view path’ absorption (optimization)
• Pre-integrating integral is future research

IBL reflection / ambient

IBL reflection / ambient

Absorption
• Absorption of ‘light path’ is accumulated during direct lighting stage per light
• Combined with ‘view path’ absorption • Beer-Lambert law [CHA15]

float3 DirectAbsorption( float NdotV, float NdotL, float3 alpha, float d ) {
float3 color; float denom = max( NdotL * NdotV, 0.001f ); color = exp( -alpha * ( d * ( ( NdotL + NdotV ) / denom) ) ); return color; }

d - view d - light

Scattering
• ‘View’/‘Light’ ‘path’ accumulates scattering as PDF width [KAR13]
• Interface roughness + medium scattering * macro thickness
• ‘View path’ scattering changes evaluated surface footprint
• BRDF anti-aliasing techniques provide a way to evaluate larger footprint of surface BRDF [HAN07][HIL12]
• Calculate projected area of scattering PDF at thickness distance
• Calculate mip-map offset from area • Offset base mip-map picked by hardware

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Example material compiler auto-optimizations

Is input specular texture
monochromatic?

Is transmission == 1.0?

Is thickness for top layer low?

Is bottom layer very rough and
non-metal?

Is scattering == 0.0?

Is input albedo texture black?

Use single channel transmission

Do not calculate diffuse

Remove support for refraction between
layers

Lower VGPR Lower ALU

Remove specular for bottom layer

Remove support for blurry refraction

Less render passes Lower ALU

Material optimizations
• Material Compiler auto-optimizations are crucial for performance
• Shader LOD
• Forward+ shader flow optimized for VGPRs
• [loop] for each light, [loop] for each layer
• Single world space position for rendering systems
• Reflection probes search and blending
• Multiple reflection probe samples with mipLevel[layerScatteringMip]
• Culled lights list lookup • Tetrahedron grid global illumination lookup • Multiple reflection probe samples with mipLevel[layerScatteringMip]

Various Forward+ material shaders generated by material compiler

Material

Fullscreen render time (PS4 @1080p)

VGPR Count

Effective ALU ops (with 1 light source)

Colored metal

1.51 ms

64

515

Thin film covered color metal

1.67 ms

64

543

Carbon fiber

1.24 ms

64

445

Naïve Glazed Carbon Fiber

3.30 ms

128

980

Optimized Glazed Carbon Fiber

2.12 ms

84

707

Double-layered Ice w/ scattering

2.06 ms

84

714

Glass HW Blend

2.07 ms

64

724

Glass HW Dual Blend

2.17 ms

64

741

Glass SS Refraction

2.35 ms + 0.3 ms fixed pass

64

813

Art Material Setup

Albedo Color: none (optimization) Specular Color: non-metal Transmittance: 1.0 (optimization) Absorption: 0.98 0.89 0.83

Roughness: low

Albedo Color : wood texture Specular Color : non-metal Transmittance : 0.0

Roughness: high

© 2017 Activision

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Thin Film

Heat treated pipe with oily layer

Soap bubble

Chemically treated aluminum

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Thin Film Layer

[MAX14]

No thin film Layer

© courtesy of Next Limit [MAX14]
Natural oily thin film layer

Thin film reflectance
• Thin film reflectance is a function of wavelength, incidence angle, thickness and layer IORs [HAA07]
Θ • Very rough, but physically motivated approximation to thin film interference. Driven with existing material definition. • Run time application uses precomputed reflectance colors
for D65 light [HAA07] • Single modulated wavelength sampling
• Better approximations [BEL17]

λ Split is at wavelength
Illustration only
n0

n1

d

n2

𝑠𝑠𝑖𝑖,𝑗𝑗 = 𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝑅𝑅𝑠𝑠(𝑛𝑛𝑖𝑖, 𝑛𝑛𝑗𝑗, 𝜃𝜃)

𝛿𝛿 = 4𝜋𝜋 cos 𝜃𝜃𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡𝑡 ∗ 𝑛𝑛1 ∗ 𝑑𝑑/𝜆𝜆

𝑝𝑝𝑖𝑖,𝑗𝑗 = 𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝐹𝑅𝑅𝑝𝑝(𝑛𝑛𝑖𝑖, 𝑛𝑛𝑗𝑗, 𝜃𝜃)

𝐹𝐹𝑠𝑠 = ((𝑠𝑠0,1)2+(𝑠𝑠1,2)2 + 2 ∗ 𝑠𝑠0,1 ∗ 𝑠𝑠1,2 ∗ cos(𝛿𝛿))/(1 + 𝑠𝑠0,1 ∗ 𝑠𝑠1,2 2 + 2 ∗ 𝑠𝑠0,1 ∗ 𝑠𝑠1,2 ∗ cos(𝛿𝛿))

𝐹𝐹𝑝𝑝 = ((𝑝𝑝0,1)2+(𝑝𝑝1,2)2 + 2 ∗ 𝑝𝑝0,1 ∗ 𝑝𝑝1,2 ∗ cos(𝛿𝛿))/(1 + 𝑝𝑝0,1 ∗ 𝑝𝑝1,2 2 + 2 ∗ 𝑝𝑝0,1 ∗ 𝑝𝑝1,2 ∗ cos(𝛿𝛿))

𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇 = (𝐹𝐹𝑠𝑠+𝐹𝐹𝑝𝑝)/2

Thin film approximation

• Thin film approximation allows for varying reflectance/IOR of the bottom layer
• IORs derived from specular reflectance for air/surface interface • 𝑟𝑟𝑖𝑖 = ( 𝑛𝑛𝑖𝑖 − 𝑛𝑛0 ⁄ 𝑛𝑛𝑖𝑖 + 𝑛𝑛0 )2
• Assume • n0 = 1.0 ( air )
Θ • r1 = 0.04 ( dielectric with average specular reflectance )
• 𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑅𝑅,𝐺𝐺,𝐵𝐵 𝑑𝑑, cos 𝜃𝜃 , 𝑟𝑟1, 𝑟𝑟2 =
∫ 𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼𝐼 𝜆𝜆 ∗ 𝐶𝐶𝐶𝐶𝐶𝐶𝑅𝑅,𝐺𝐺,𝐵𝐵 𝜆𝜆 ∗ 𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇 𝜆𝜆, 𝑑𝑑, cos 𝜃𝜃 , 𝑟𝑟1, 𝑟𝑟2 d𝜆𝜆
• 2D texture lookup stores reflectance convolved as offset to (Schlick) Fresnel • 𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑚𝑚𝑅𝑅,𝐺𝐺,𝐵𝐵 𝑑𝑑, cos 𝜃𝜃 , 𝑟𝑟1, 𝑘𝑘 − 𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆(𝑘𝑘, cos 𝜃𝜃 ) • k – const correlation factor for r1 / r2

λ Split is at wavelength
Illustration only
n0

n1

d

n2

Thin film approximation rationale
• Plot of Fresnel for bottom surface and RGB reflectance vs cos(Θ) for fixed thickness, film IOR and bottom surface IOR
• When the bottom surface IOR is varied, the difference between the RGB curves and the Fresnel curve remains approximately proportional at non-glancing angles.

Thin film approximation

𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑚𝑚𝑟𝑟,𝑔𝑔,𝑏𝑏 d, cos 𝜃𝜃 , 𝑟𝑟1, 𝑟𝑟2 ≈ 𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆 𝑟𝑟2, cos 𝜃𝜃 + (𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑚𝑚𝑟𝑟,𝑔𝑔,𝑏𝑏 𝑑𝑑, cos 𝜃𝜃 , 𝑟𝑟1, 𝑘𝑘 − 𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆𝑆 𝑘𝑘, cos 𝜃𝜃 ) ∗ 𝑃�𝑃(𝑟𝑟2, 𝑟𝑟3)
• 𝑃�𝑃 was chosen by observing difference between thin film reflectance and bottom surface reflectance at cos 𝜃𝜃 = 1.

•

Let 𝑃𝑃 𝑟𝑟𝑟, 𝑟𝑟𝑟

= sup( 𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇𝑇 𝜆𝜆, 𝑑𝑑, 0, 𝑟𝑟1, 𝑟𝑟2
∀𝜆𝜆,𝑑𝑑

− 𝑟𝑟2 ). ThinFilm reflectance is periodic for 𝑑𝜆𝑑𝜆, so this is easy to

compute.

• Choose k such that P(r1,k) is maximized and normalize 𝑃�𝑃 𝑟𝑟1, 𝑟𝑟2 = 𝑃𝑃(𝑟𝑟1, 𝑟𝑟2)/𝑃𝑃(𝑟𝑟1, 𝑘𝑘)
• For our chosen value of 𝑟𝑟1, 𝑃�𝑃 ends up being roughly parabolic with max at 𝑘𝑘 ≈ 0.5. Accuracy was not a huge concern for this feature, so we simplified things even further and set 𝑃�𝑃 𝑟𝑟1, 𝑟𝑟2 = 4 ∗ 𝑟𝑟2 ∗ (1 − 𝑟𝑟2)

© 2017 Activision Publishing, Inc.
float3 ApplyThinFilm( float3 fresnel, float NdotL, float2 thicknessAndIntensity, float3 specSample ){ float3 lutSample = thinFilmLUT.SampleLevel( linear, float2( thicknessAndIntensity.x, NdotL ), 0 ).rgb - 0.5f; float3 intensity = thicknessAndIntensity.y * 4.0f * ( specSample * ( 1.0f - specSample ) ); return saturate( lutSample * intensity + fresnel );}
float3 PhysicallyBased_GetPrimaryFresnelWithSpecColor( SurfaceAttributes surfaceAttributes, float dotH ){ float3 primaryFresnel = SchlickPrimaryFresnel( abs( dotH ), surfaceAttributes.specColor ); return = ApplyThinFilm( primaryFresnel, abs( dotH ), surfaceAttributes.thinFilmThicknessAndIntensity, surfaceAttributes.specColor ); }

© 2017 Activision Publishing, Inc.
• Art controls
• Intensity texture • Thickness texture • Min / max thickness range • Custom LUT

Default r1 Air LUT Custom Methane LUT

Thin film layer
© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

© 2017 Activision Publishing, Inc.

Future Research
• Multi-scattering [HEI16] • Scattering between surfaces [DUP16] • Approximating complex BRDFs with multilayer Material Compiler
• TRT hair shading • Path based shading/lighting models
• Getting closer to movie industry material shaders and quality [HER17]
• Not far away in terms of feature set • “Pixar’s Foundation for Materials: PxrSurface and PxrMarschnerHair”

Rendering Presentations 2017

• EGSR
• Ambient Dice
• Siggraph
• Indirect Lighting in COD: Infinite Warfare • Dynamic Temporal Supersampling and Anti-Aliasing • Improved Culling for Tiled and Clustered Rendering • Practical Multilayered PBR rendering
• Microsoft XFest 2017
• Optimizing the Renderer of Call of Duty: Infinite Warfare

Michal Iwanicki
Michal Iwanicki Jorge Jimenez Michal Drobot Michal Drobot
Michal Drobot

research.activision.com

JOIN US
www.activisionblizzard.com/careers

Special Thanks

• Tech Art
• Kyle McKisic • Olin Georgescu

• Code
• Adam Micciulla
• amicciulla@gmail.com

PBS Course Organisers: Stephen Hill
Stephen McAuley

Additional Thanks
• IW Rendering Team
• Anthony Carotenuto, Rulon Raymond, Peter Pon, Mike Esposito, Vishal Kashyap, Felipe Gomez
• Activision Central Tech • Infinity Ward
• Sledgehammer Games • Treyarch • Raven

research.activision.com
Q&A
michal@infinityward.com @MichalDrobot

References 1/2
[ADA03] “Real-time Rendering of Woven Clothes”, Neeharika Adabala, Nadia Magnenat-Thalmann, Guangzheng Fei, VRST 2003 [BEL17] “A Practical Extension to Microfacet Theory for the Modelling of Varying Iridescence”, Laurent Belcour and Pascal Barla, Siggraph 2017 [BUR12] “Physically-Based Shading at Disney”, Brent Burley, Siggraph 2012 [BUR15] “Extending the Disney BRDF to BSDF with Integrated Subsurface Scattering”, Brent Burley, Siggraph 2015 [CHA15] “Real-World Measurements for Call of Duty: Advanced Warfare”, Danny Chan, Siggraph 2015 [DRO10] “Quadtree Displacement Mapping with Height Blending”, Michal Drobot, GDC Europe 2009 [DRO17] “Rendering of Call of Duty: Infinite Warfare”, Michal Drobot, Digital Dragons 2017 [DUP16] “Additional Progress Towards the Unification of Microfacet and Microflake Theories”, Jonathan Dupuy, Eric Heitz and Eugene d’Eon, EGSR 2016 [HAA07] “Thin Film Rendering”, Tomas Bernhard Haarde and Pall Ragnar Palsson, DTU/ITU Master Thesis, 2007 [HAN07] “Frequency Domain Normal Map Filtering”, Charles Han, Bo Sun, Ravi Ramamoorthi and Eitan Grinspun, Siggraph 2007 [HER17] “Pixar’s Foundation for Materials: PxrSurface and PxrMarschnerHair”, Christophe Hery and Junyi Ling, Siggraph 2017

References 2/2
[HAN07] “Frequency Domain Normal Map Filtering”, Charles Han, Bo Sun, Ravi Ramamoorthi and Eitan Grinspun, Siggraph 2007 [HER17] “Pixar’s Foundation for Materials: PxrSurface and PxrMarschnerHair”, Christophe Hery and Junyi Ling, Siggraph 2017 [HIL12] “Rock-Solid Shading: Image Stability Without Sacrificing Detail”, Dan Baker and Stephen Hill, Siggraph 2016 [HEI14] “Understanding the Masking-Shadowing Function in Microfacet-Based BRDFs”, Eric Heitz, Journal of Computer Graphics Techniques Vol. 3, No. 2, 2014 [HEI16] “Multiple-Scattering Microfacet BSDFs with the Smith Model”, Eric Heitz, Johannes Hanika, Eugene d’Eon and Carsten Dachsbacher [KAR13] “Real shading in Unreal Engine 4”, Brian Karis, Siggraph 2013 [MAN16] “Fast Filtering of Reflection Probes”, Josiah Manson and Peter-Pike Sloan, EGSR 2016 [MAX14] “Pushing the limits of realism of materials”, Atilla Akin, Maxwell Render Team, blog entry [SCH12] “Recent Advances in Physically-Based Appearance Modeling of Cloth”, Kai Schroder, Shuang Zhao and Arno Zinke, 2012 [STA15] “Stochastic Screen-Space Reflections”, Tomasz Stachowiak and Yasin Uludag, Siggraph 2015 [WEI07] “Arbitrarily Layered Micro-Facet Surfaces”, Andrea Weidlich and Alexander Wilkie

